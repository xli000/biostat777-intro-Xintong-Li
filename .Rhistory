library(survey)
library(dplyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R")
library(survey)
library(dplyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
d1 <- da35067.0001 %>%
filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na))
head(d1, 10)
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
svytable(~NSD1E, design = d1w)
table(~NSD1E, design = d1w)
svytable(~NSD1E, design = d1w)
# total - mean
summaise(d1w$variables$AGE)
# total - mean
summarise(d1w$variables$AGE)
# total - mean
summary(d1w$variables$AGE)
# total - mean
summarise(data.frame(AGE = d1w$variables$AGE))
# total - mean
total<- data.frame(AGE = d1w$variables$AGE) %>%
summarise(
mean_age = mean(AGE, na.rm = TRUE))
total
View(total)
total$mean_age
# total - se
svyvar(~ AGE, design = d1w)
prop.table(svytable(~EDUCAT+NSD1E, design = d1w), margin=2)
prop.table(svytable(~EMPCAT+NSD1E, design = d1w), margin=2)
prop.table(svytable(~EDUCAT+NSD1E, design = d1w), margin=2)
prop.table(svytable(~EMPCAT+NSD1E, design = d1w), margin=2)
svytable(~INC_CAT+NSD1E, design = d1w)
d1 <- da35067.0001 %>%
select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E) %>%
drop_na() %>%
head(10)
d1 <- da35067.0001 %>%
select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E) %>%
drop_na()
library(dplyr)
d1 <- da35067.0001 %>%
select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E) %>%
drop_na()
library(tidyr)
d1 <- da35067.0001 %>%
select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E) %>%
drop_na()
head(10)
head(d1,10)
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
d2 <- da35067.0001 %>%
filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na)) %>%
head(10)
View(d2)
head(d1,10)
svytable(~NSD1E, design = d1w)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
d2 <- da35067.0001 %>%
filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na)) %>%
head(10)
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d2)
svytable(~NSD1E, design = d1w)
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
# d1 <- da35067.0001 %>%
#   select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU) %>%
#   drop_na()
# head(d1,10)
d1 <- da35067.0001 %>%
filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na)) %>%
head(10)
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
svytable(~NSD1E, design = d1w)
svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
# d1 <- da35067.0001 %>%
#   select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU) %>%
#   drop_na()
# head(d1,10)
d1 <- da35067.0001 %>%
filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na)) %>%
head(10)
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
svytable(~NSD1E, design = d1w)
svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
# d1 <- da35067.0001 %>%
#   select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU) %>%
#   drop_na()
# head(d1,10)
d1 <- da35067.0001 %>%
filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na))
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
svytable(~NSD1E, design = d1w)
svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
# total - mean
total<- data.frame(AGE = d1w$variables$AGE) %>%
summarise(
mean_age = mean(AGE, na.rm = TRUE))
total$mean_age
# total - se
svyvar(~ AGE, design = d1w)
# round for integers in final table
svytable(~EDUCAT+NSD1E, design = d1w)
prop.table(svytable(~EDUCAT+NSD1E, design = d1w), margin=2)
svytable(~EMPCAT+NSD1E, design = d1w)
prop.table(svytable(~EMPCAT+NSD1E, design = d1w), margin=2)
svytable(~INC_CAT+NSD1E, design = d1w)
prop.table(svytable(~INC_CAT+NSD1E, design = d1w), margin=2)
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
d1 <- da35067.0001 %>%
select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU) %>%
drop_na()
head(d1,10)
# d1 <- da35067.0001 %>%
#  filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na))
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
svytable(~NSD1E, design = d1w)
svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
# total - mean
total<- data.frame(AGE = d1w$variables$AGE) %>%
summarise(
mean_age = mean(AGE, na.rm = TRUE))
total$mean_age
# total - se
svyvar(~ AGE, design = d1w)
# round for integers in final table
svytable(~EDUCAT+NSD1E, design = d1w)
prop.table(svytable(~EDUCAT+NSD1E, design = d1w), margin=2)
svytable(~EMPCAT+NSD1E, design = d1w)
prop.table(svytable(~EMPCAT+NSD1E, design = d1w), margin=2)
svytable(~INC_CAT+NSD1E, design = d1w)
prop.table(svytable(~INC_CAT+NSD1E, design = d1w), margin=2)
# Relevel NSD1E with "never" as the reference group
levels(d1w$variables$NSD1E)
levels(d1w$variables$I_ALD30)
unique(d1w$variables$I_ALD30)
svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
# total - mean
total<- data.frame(AGE = d1w$variables$AGE) %>%
summarise(
mean_age = mean(AGE, na.rm = TRUE))
total$mean_age
# total - se
svyvar(~ AGE, design = d1w)
# round for integers in final table
svytable(~EDUCAT+NSD1E, design = d1w)
prop.table(svytable(~EDUCAT+NSD1E, design = d1w), margin=2)
svytable(~EMPCAT+NSD1E, design = d1w)
prop.table(svytable(~EMPCAT+NSD1E, design = d1w), margin=2)
svytable(~INC_CAT+NSD1E, design = d1w)
prop.table(svytable(~INC_CAT+NSD1E, design = d1w), margin=2)
# Relevel NSD1E with "never" as the reference group
levels(d1w$variables$NSD1E)
levels(d1w$variables$I_ALD30)
unique(d1w$variables$I_ALD30)
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
d1 <- da35067.0001 %>%
select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU, ALD30) %>%
drop_na()
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
d1 <- da35067.0001 %>%
select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU, ALD30) %>%
drop_na()
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
# d1 <- da35067.0001 %>%
#   select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU) %>%
#   drop_na()
# head(d1,10)
d1 <- da35067.0001 %>%
filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na))
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
svytable(~NSD1E, design = d1w)
# Relevel NSD1E with "never" as the reference group
levels(d1w$variables$NSD1E)
levels(d1w$variables$I_ALD30)
unique(d1w$variables$I_ALD30)
d1w$NSD1E <- relevel(d1w$variables$NSD1E, ref = "(4) Never")
d1w$variables$I_ALD30 <- relevel(d1w$variables$I_ALD30, ref = "(5) Not Endorsed")
a1 <- svyglm(I_ALD30 ~ NSD1E, family = binomial(link = "logit"), design = d1w)
summary(a1)
exp(coef(a1))
ci <- confint(a1)
exp(ci)
a2 <- svyglm (I_ALD30 ~ NSD1E + AGE, family = binomial(link = "logit"), design = d1w)
summary(a2)
#### final model
a3 <- svyglm (I_ALD30 ~ NSD1E + AGE + EDUCAT, family = binomial(link = "logit"), design = d1w)
summary(a3)
exp(coef(a3))
ci1 <- confint(a3)
exp(ci1)
library(car)
vif(a3)
a4 <- svyglm (I_ALD30 ~ NSD1E + AGE + EDUCAT + EMPCAT, family = binomial(link = "logit"), design = d1w)
summary(a4)
a5 <- svyglm (I_ALD30 ~ NSD1E + AGE + EDUCAT + INC_CAT, family = binomial(link = "logit"), design = d1w)
summary(a5)
a6 <- svyglm (I_ALD30 ~ NSD1E + AGE + EDUCAT + EMPCAT + INC_CAT, family = binomial(link = "logit"), design = d1w)
summary(a6)
vif(a6)
unique(d1w$variables$I_ALD30)
View(d1w)
head(d1w$variables$I_ALD30)
levels(d1w$variables$I_ALD30)
unique(d1w$variables$I_ALD30)
d1$I_ALD30
library(survey)
library(dplyr)
library(tidyr)
library(RSQLite)
load("/Users/xintong/Desktop/statistical overflow/project1 - R/35067-0001-Data.rda")
d1 <- da35067.0001 %>%
select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU, I_ALD30) %>%
drop_na()
head(d1,10)
# d1 <- da35067.0001 %>%
#  filter(!if_any(c(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E), is.na))
d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
svytable(~NSD1E, design = d1w)
unique(d1w$variables$I_ALD30)
distinct(d1w$variables$I_ALD30)
# Relevel NSD1E with "never" as the reference group
levels(d1w$variables$NSD1E)
levels(d1w$variables$I_ALD30)
distinct(d1w$variables$I_ALD30)
distinct_values
distinct_values <- data.frame(I_ALD30 = d1w$variables$I_ALD30) %>%
distinct()
distinct_values
# Relevel NSD1E with "never" as the reference group
levels(d1w$variables$NSD1E)
levels(d1w$variables$I_ALD30)
distinct_values <- data.frame(I_ALD30 = d1w$variables$I_ALD30) %>%
distinct()
distinct_values
distinct_values <- data.frame(d1w$variables$I_ALD30) %>%
distinct()
distinct_values
View(distinct_values)
print(distinct_values)
distinct_values <- data.frame(d1w$variables$I_ALD30) %>%
distinct()
print(distinct_values)
print(distinct_values$d1w.variables.I_ALD30)
print(d1w.variables.I_ALD30)
# Generate and convert survey tables to data frames
educat_nsd1e <- as.data.frame(svytable(~EDUCAT + NSD1E, design = d1w))
empcat_nsd1e <- as.data.frame(svytable(~EMPCAT + NSD1E, design = d1w))
inc_cat_nsd1e <- as.data.frame(svytable(~INC_CAT + NSD1E, design = d1w))
# Add a grouping variable to each data frame
educat_nsd1e <- educat_nsd1e %>% mutate(group = "EDUCAT")
empcat_nsd1e <- empcat_nsd1e %>% mutate(group = "EMPCAT")
inc_cat_nsd1e <- inc_cat_nsd1e %>% mutate(group = "INC_CAT")
# Combine all data frames into one
combined_data <- bind_rows(educat_nsd1e, empcat_nsd1e, inc_cat_nsd1e)
# Create a ggplot with faceting
ggplot(combined_data, aes(x = NSD1E, y = Freq, fill = group)) +
geom_col(position = "dodge") +
facet_wrap(~ group, scales = "free_y") +
labs(
title = "Survey-Weighted Counts by Group",
x = "NSD1E",
y = "Weighted Frequency",
fill = "Group"
) +
theme_minimal()
library(ggplot2)
# Generate and convert survey tables to data frames
educat_nsd1e <- as.data.frame(svytable(~EDUCAT + NSD1E, design = d1w))
empcat_nsd1e <- as.data.frame(svytable(~EMPCAT + NSD1E, design = d1w))
inc_cat_nsd1e <- as.data.frame(svytable(~INC_CAT + NSD1E, design = d1w))
# Add a grouping variable to each data frame
educat_nsd1e <- educat_nsd1e %>% mutate(group = "EDUCAT")
empcat_nsd1e <- empcat_nsd1e %>% mutate(group = "EMPCAT")
inc_cat_nsd1e <- inc_cat_nsd1e %>% mutate(group = "INC_CAT")
# Combine all data frames into one
combined_data <- bind_rows(educat_nsd1e, empcat_nsd1e, inc_cat_nsd1e)
# Create a ggplot with faceting
ggplot(combined_data, aes(x = NSD1E, y = Freq, fill = group)) +
geom_col(position = "dodge") +
facet_wrap(~ group, scales = "free_y") +
labs(
title = "Survey-Weighted Counts by Group",
x = "NSD1E",
y = "Weighted Frequency",
fill = "Group"
) +
theme_minimal()
# Generate and convert survey tables to data frames
educat_nsd1e <- as.data.frame(svytable(~EDUCAT + NSD1E, design = d1w))
empcat_nsd1e <- as.data.frame(svytable(~EMPCAT + NSD1E, design = d1w))
inc_cat_nsd1e <- as.data.frame(svytable(~INC_CAT + NSD1E, design = d1w))
# Add a grouping variable to each data frame
educat_nsd1e <- educat_nsd1e %>% mutate(group = "Education")
empcat_nsd1e <- empcat_nsd1e %>% mutate(group = "EMPCAT")
inc_cat_nsd1e <- inc_cat_nsd1e %>% mutate(group = "INC_CAT")
# Combine all data frames into one
combined_data <- bind_rows(educat_nsd1e, empcat_nsd1e, inc_cat_nsd1e)
# Create a ggplot with faceting
ggplot(combined_data, aes(x = NSD1E, y = Freq, fill = group)) +
geom_col(position = "dodge") +
facet_wrap(~ group, scales = "free_y") +
labs(
title = "Survey-Weighted Counts by Different Demographic Variables",
x = "NSD1E",
y = "Weighted Frequency",
fill = "Group"
) +
theme_minimal()
# Generate and convert survey tables to data frames
educat_nsd1e <- as.data.frame(svytable(~EDUCAT + NSD1E, design = d1w))
empcat_nsd1e <- as.data.frame(svytable(~EMPCAT + NSD1E, design = d1w))
inc_cat_nsd1e <- as.data.frame(svytable(~INC_CAT + NSD1E, design = d1w))
# Add a grouping variable to each data frame
educat_nsd1e <- educat_nsd1e %>% mutate(group = "Education")
empcat_nsd1e <- empcat_nsd1e %>% mutate(group = "Employment")
inc_cat_nsd1e <- inc_cat_nsd1e %>% mutate(group = "Income")
# Combine all data frames into one
combined_data <- bind_rows(educat_nsd1e, empcat_nsd1e, inc_cat_nsd1e)
# Create a ggplot with faceting
ggplot(combined_data, aes(x = NSD1E, y = Freq, fill = group)) +
geom_col(position = "dodge") +
facet_wrap(~ group, scales = "free_y") +
labs(
title = "Survey-Weighted Counts by Different Demographic Variables",
x = "NSD1E",
y = "Weighted Frequency",
fill = "Group"
) +
theme_minimal()
total$mean_age
# total - se
svyvar(~ AGE, design = d1w)
svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
# total - mean
total<- data.frame(AGE = d1w$variables$AGE) %>%
summarise(
mean_age = mean(AGE, na.rm = TRUE))
total$mean_age
svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
age_means <- svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
age_means
View(age_means)
age_means <- svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)
print(age_means)
head(age_means)
age_means <-  as.data.frame(svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE))
head(age_means)
age_means
age_means <-  as.data.frame(svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE))
age_means
print((svyby(formula = ~ AGE, by = ~ NSD1E, design = d1w, FUN = svymean, na.rm=TRUE)))
library(ggplot2)
ggplot(d1, aes(x = Frequency, y = Age)) +
geom_boxplot(alpha = 0.5, width = 0.2) +
geom_violin(trim = FALSE, fill = "skyblue", alpha = 0.5) +
labs(
title = "Mean Age by Frequency of Feeling Sad",
x = "Frequency of Feeling Sad",
y = "Age"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
