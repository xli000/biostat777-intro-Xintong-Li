---
title: "Example analysis"
format: html 
bibliography: references.bib
nocite: |
  @*
---

This analysis aims to explore the association between the frequency of feeling sad and incident alcohol dependence.

::: {.column-margin}
Incidental alcohol dependence refers to alcohol dependence during the past 30 days.
:::

## Exploratory Data Analysis
## Data Wrangling
The svydesign was used to account for survey design features of the data. 
```{r}
#| message: false
#| warning: false
library(survey)
library(dplyr)
library(tidyr)
library(ggplot2)
library(forcats)

load("35067-0001-Data.rda")

d1 <- da35067.0001 %>%
  select(AGE, EDUCAT, EMPCAT, INC_CAT, NSD1E, RESPID, CASEWGT, STR, SECU, I_ALD30) %>%
  drop_na() %>%
  rename(Frequency = NSD1E, Age = AGE, Education = EDUCAT, Employment = EMPCAT, Income = INC_CAT)

d1w <- svydesign(id = ~RESPID, weights = ~CASEWGT, strata = ~STR, nest = TRUE, cluster = ~SECU, data = d1)
```

```{r}
library(ggplot2)

ggplot(d1, aes(x = Frequency, y = Age)) +
  geom_boxplot(alpha = 0.5, width = 0.2) +  
  geom_violin(trim = FALSE, fill = "skyblue", alpha = 0.5) + 
  labs(
    title = "Mean Age by Frequency of Feeling Sad",
    x = "Frequency of Feeling Sad",
    y = "Age"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
edu <- as.data.frame(svytable(~Education + Frequency, design = d1w))

ggplot(edu, aes(x = Frequency, y = Freq, fill = Frequency)) +
  geom_col(position = "dodge") +
  facet_wrap(~ Education, scales = "free_y") +
  labs(
    title = "Survey-Weighted Counts by Years of Education",
    x = "Frequency of Feeling Sad",
    y = "Count of People",
    fill = "Frequency"
  ) +
  theme_minimal() +
 theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
emp <- as.data.frame(svytable(~Employment + Frequency, design = d1w))
ggplot(emp, aes(x = Frequency, y = Freq, fill = Frequency)) +
  geom_col(position = "dodge") +
  facet_wrap(~ Employment, scales = "free_y") +  
  labs(
    title = "Survey-Weighted Counts by Employment",
    x = "Frequency of Feeling Sad",
    y = "Count of People",
    fill = "Frequency"
  ) +
  theme_minimal() +
 theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
inc <- as.data.frame(svytable(~Income + Frequency, design = d1w))
ggplot(inc, aes(x = Frequency, y = Freq, fill = Frequency)) +
  geom_col(position = "dodge") +
  facet_wrap(~ Income, scales = "free_y", labeller = label_wrap_gen(width = 25)) + 
  labs(
    title = "Survey-Weighted Counts by Income Levels",
    x = "Frequency of Feeling Sad",
    y = "Count of People",
    fill = "Frequency"
  ) +
  theme_minimal() +
 theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
# Relevel Frequency with "never" as the reference group
d1w$variables <- d1w$variables %>%
  mutate(
    Frequency = fct_relevel(Frequency, "(4) Never"),  
    I_ALD30 = fct_relevel(I_ALD30, "(5) Not Endorsed")
    )

a1 <- svyglm(I_ALD30 ~ Frequency, family = binomial(link = "logit"), design = d1w)
summary(a1)
exp(coef(a1))
ci <- confint(a1)
exp(ci)

a2 <- svyglm (I_ALD30 ~ Frequency + Age, family = binomial(link = "logit"), design = d1w)
summary(a2)

# final model
a3 <- svyglm (I_ALD30 ~ Frequency + Age + Education, family = binomial(link = "logit"), design = d1w)
summary(a3)
exp(coef(a3))
ci1 <- confint(a3)
exp(ci1)

library(car)
vif(a3)

a4 <- svyglm (I_ALD30 ~ Frequency + Age + Education + Employment, family = binomial(link = "logit"), design = d1w)
summary(a4)

a5 <- svyglm (I_ALD30 ~ Frequency + Age + Education + Income, family = binomial(link = "logit"), design = d1w)
summary(a5)

a6 <- svyglm (I_ALD30 ~ Frequency + Age + Education + Income + Employment, family = binomial(link = "logit"), design = d1w)
summary(a6)
vif(a6)
```

::: {.callout-note collapse="true"}
### Functions from the `dplyr` Package

-   `select()`
-   `distinct()`
-   `rename()`
-   `mutate()`
:::
::: {.callout-note collapse="true"}
### Functions from the `tidyr` Package

-   `drop_na()`
:::
::: {.callout-note collapse="true"}
### Functions from the `ggplot2` Package

-   `geom_boxplot()`
-   `geom_violin()`
-   `geom_col()`
:::

## References
::: {#refs}
:::